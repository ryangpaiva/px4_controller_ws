function [data, info] = batteryStatus
%BatteryStatus gives an empty data for px4_msgs/BatteryStatus
% Copyright 2019-2021 The MathWorks, Inc.
data = struct();
data.MessageType = 'px4_msgs/BatteryStatus';
[data.MESSAGE_VERSION, info.MESSAGE_VERSION] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 0, [NaN]);
[data.timestamp, info.timestamp] = ros.internal.ros2.messages.ros2.default_type('uint64',1,0);
[data.connected, info.connected] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
[data.voltage_v, info.voltage_v] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.current_a, info.current_a] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.current_average_a, info.current_average_a] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.discharged_mah, info.discharged_mah] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.remaining, info.remaining] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.scale, info.scale] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.time_remaining_s, info.time_remaining_s] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.temperature, info.temperature] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.cell_count, info.cell_count] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0);
[data.BATTERY_SOURCE_POWER_MODULE, info.BATTERY_SOURCE_POWER_MODULE] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 0, [NaN]);
[data.BATTERY_SOURCE_EXTERNAL, info.BATTERY_SOURCE_EXTERNAL] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 1, [NaN]);
[data.BATTERY_SOURCE_ESCS, info.BATTERY_SOURCE_ESCS] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 2, [NaN]);
[data.source, info.source] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0);
[data.priority, info.priority] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0);
[data.capacity, info.capacity] = ros.internal.ros2.messages.ros2.default_type('uint16',1,0);
[data.cycle_count, info.cycle_count] = ros.internal.ros2.messages.ros2.default_type('uint16',1,0);
[data.average_time_to_empty, info.average_time_to_empty] = ros.internal.ros2.messages.ros2.default_type('uint16',1,0);
[data.serial_number, info.serial_number] = ros.internal.ros2.messages.ros2.default_type('uint16',1,0);
[data.manufacture_date, info.manufacture_date] = ros.internal.ros2.messages.ros2.default_type('uint16',1,0);
[data.state_of_health, info.state_of_health] = ros.internal.ros2.messages.ros2.default_type('uint16',1,0);
[data.max_error, info.max_error] = ros.internal.ros2.messages.ros2.default_type('uint16',1,0);
[data.id, info.id] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0);
[data.interface_error, info.interface_error] = ros.internal.ros2.messages.ros2.default_type('uint16',1,0);
[data.voltage_cell_v, info.voltage_cell_v] = ros.internal.ros2.messages.ros2.default_type('single',14,0);
[data.max_cell_voltage_delta, info.max_cell_voltage_delta] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.is_powering_off, info.is_powering_off] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
[data.is_required, info.is_required] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
[data.BATTERY_WARNING_NONE, info.BATTERY_WARNING_NONE] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 0, [NaN]);
[data.BATTERY_WARNING_LOW, info.BATTERY_WARNING_LOW] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 1, [NaN]);
[data.BATTERY_WARNING_CRITICAL, info.BATTERY_WARNING_CRITICAL] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 2, [NaN]);
[data.BATTERY_WARNING_EMERGENCY, info.BATTERY_WARNING_EMERGENCY] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 3, [NaN]);
[data.BATTERY_WARNING_FAILED, info.BATTERY_WARNING_FAILED] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 4, [NaN]);
[data.BATTERY_STATE_UNHEALTHY, info.BATTERY_STATE_UNHEALTHY] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 6, [NaN]);
[data.BATTERY_STATE_CHARGING, info.BATTERY_STATE_CHARGING] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 7, [NaN]);
[data.BATTERY_FAULT_DEEP_DISCHARGE, info.BATTERY_FAULT_DEEP_DISCHARGE] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 0, [NaN]);
[data.BATTERY_FAULT_SPIKES, info.BATTERY_FAULT_SPIKES] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 1, [NaN]);
[data.BATTERY_FAULT_CELL_FAIL, info.BATTERY_FAULT_CELL_FAIL] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 2, [NaN]);
[data.BATTERY_FAULT_OVER_CURRENT, info.BATTERY_FAULT_OVER_CURRENT] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 3, [NaN]);
[data.BATTERY_FAULT_OVER_TEMPERATURE, info.BATTERY_FAULT_OVER_TEMPERATURE] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 4, [NaN]);
[data.BATTERY_FAULT_UNDER_TEMPERATURE, info.BATTERY_FAULT_UNDER_TEMPERATURE] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 5, [NaN]);
[data.BATTERY_FAULT_INCOMPATIBLE_VOLTAGE, info.BATTERY_FAULT_INCOMPATIBLE_VOLTAGE] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 6, [NaN]);
[data.BATTERY_FAULT_INCOMPATIBLE_FIRMWARE, info.BATTERY_FAULT_INCOMPATIBLE_FIRMWARE] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 7, [NaN]);
[data.BATTERY_FAULT_INCOMPATIBLE_MODEL, info.BATTERY_FAULT_INCOMPATIBLE_MODEL] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 8, [NaN]);
[data.BATTERY_FAULT_HARDWARE_FAILURE, info.BATTERY_FAULT_HARDWARE_FAILURE] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 9, [NaN]);
[data.BATTERY_FAULT_FAILED_TO_ARM, info.BATTERY_FAULT_FAILED_TO_ARM] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 10, [NaN]);
[data.BATTERY_FAULT_COUNT, info.BATTERY_FAULT_COUNT] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 11, [NaN]);
[data.faults, info.faults] = ros.internal.ros2.messages.ros2.default_type('uint16',1,0);
[data.warning, info.warning] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0);
[data.MAX_INSTANCES, info.MAX_INSTANCES] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 4, [NaN]);
[data.full_charge_capacity_wh, info.full_charge_capacity_wh] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.remaining_capacity_wh, info.remaining_capacity_wh] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.over_discharge_count, info.over_discharge_count] = ros.internal.ros2.messages.ros2.default_type('uint16',1,0);
[data.nominal_voltage, info.nominal_voltage] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.internal_resistance_estimate, info.internal_resistance_estimate] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.ocv_estimate, info.ocv_estimate] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.ocv_estimate_filtered, info.ocv_estimate_filtered] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.volt_based_soc_estimate, info.volt_based_soc_estimate] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.voltage_prediction, info.voltage_prediction] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.prediction_error, info.prediction_error] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.estimation_covariance_norm, info.estimation_covariance_norm] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
info.MessageType = 'px4_msgs/BatteryStatus';
info.constant = 0;
info.default = 0;
info.maxstrlen = NaN;
info.MaxLen = 1;
info.MinLen = 1;
info.MatPath = cell(1,63);
info.MatPath{1} = 'MESSAGE_VERSION';
info.MatPath{2} = 'timestamp';
info.MatPath{3} = 'connected';
info.MatPath{4} = 'voltage_v';
info.MatPath{5} = 'current_a';
info.MatPath{6} = 'current_average_a';
info.MatPath{7} = 'discharged_mah';
info.MatPath{8} = 'remaining';
info.MatPath{9} = 'scale';
info.MatPath{10} = 'time_remaining_s';
info.MatPath{11} = 'temperature';
info.MatPath{12} = 'cell_count';
info.MatPath{13} = 'BATTERY_SOURCE_POWER_MODULE';
info.MatPath{14} = 'BATTERY_SOURCE_EXTERNAL';
info.MatPath{15} = 'BATTERY_SOURCE_ESCS';
info.MatPath{16} = 'source';
info.MatPath{17} = 'priority';
info.MatPath{18} = 'capacity';
info.MatPath{19} = 'cycle_count';
info.MatPath{20} = 'average_time_to_empty';
info.MatPath{21} = 'serial_number';
info.MatPath{22} = 'manufacture_date';
info.MatPath{23} = 'state_of_health';
info.MatPath{24} = 'max_error';
info.MatPath{25} = 'id';
info.MatPath{26} = 'interface_error';
info.MatPath{27} = 'voltage_cell_v';
info.MatPath{28} = 'max_cell_voltage_delta';
info.MatPath{29} = 'is_powering_off';
info.MatPath{30} = 'is_required';
info.MatPath{31} = 'BATTERY_WARNING_NONE';
info.MatPath{32} = 'BATTERY_WARNING_LOW';
info.MatPath{33} = 'BATTERY_WARNING_CRITICAL';
info.MatPath{34} = 'BATTERY_WARNING_EMERGENCY';
info.MatPath{35} = 'BATTERY_WARNING_FAILED';
info.MatPath{36} = 'BATTERY_STATE_UNHEALTHY';
info.MatPath{37} = 'BATTERY_STATE_CHARGING';
info.MatPath{38} = 'BATTERY_FAULT_DEEP_DISCHARGE';
info.MatPath{39} = 'BATTERY_FAULT_SPIKES';
info.MatPath{40} = 'BATTERY_FAULT_CELL_FAIL';
info.MatPath{41} = 'BATTERY_FAULT_OVER_CURRENT';
info.MatPath{42} = 'BATTERY_FAULT_OVER_TEMPERATURE';
info.MatPath{43} = 'BATTERY_FAULT_UNDER_TEMPERATURE';
info.MatPath{44} = 'BATTERY_FAULT_INCOMPATIBLE_VOLTAGE';
info.MatPath{45} = 'BATTERY_FAULT_INCOMPATIBLE_FIRMWARE';
info.MatPath{46} = 'BATTERY_FAULT_INCOMPATIBLE_MODEL';
info.MatPath{47} = 'BATTERY_FAULT_HARDWARE_FAILURE';
info.MatPath{48} = 'BATTERY_FAULT_FAILED_TO_ARM';
info.MatPath{49} = 'BATTERY_FAULT_COUNT';
info.MatPath{50} = 'faults';
info.MatPath{51} = 'warning';
info.MatPath{52} = 'MAX_INSTANCES';
info.MatPath{53} = 'full_charge_capacity_wh';
info.MatPath{54} = 'remaining_capacity_wh';
info.MatPath{55} = 'over_discharge_count';
info.MatPath{56} = 'nominal_voltage';
info.MatPath{57} = 'internal_resistance_estimate';
info.MatPath{58} = 'ocv_estimate';
info.MatPath{59} = 'ocv_estimate_filtered';
info.MatPath{60} = 'volt_based_soc_estimate';
info.MatPath{61} = 'voltage_prediction';
info.MatPath{62} = 'prediction_error';
info.MatPath{63} = 'estimation_covariance_norm';
