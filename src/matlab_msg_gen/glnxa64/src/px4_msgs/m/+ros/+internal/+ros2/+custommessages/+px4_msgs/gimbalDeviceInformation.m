function [data, info] = gimbalDeviceInformation
%GimbalDeviceInformation gives an empty data for px4_msgs/GimbalDeviceInformation
% Copyright 2019-2021 The MathWorks, Inc.
data = struct();
data.MessageType = 'px4_msgs/GimbalDeviceInformation';
[data.timestamp, info.timestamp] = ros.internal.ros2.messages.ros2.default_type('uint64',1,0);
[data.vendor_name, info.vendor_name] = ros.internal.ros2.messages.ros2.default_type('uint8',32,0);
[data.model_name, info.model_name] = ros.internal.ros2.messages.ros2.default_type('uint8',32,0);
[data.custom_name, info.custom_name] = ros.internal.ros2.messages.ros2.default_type('uint8',32,0);
[data.firmware_version, info.firmware_version] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0);
[data.hardware_version, info.hardware_version] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0);
[data.uid, info.uid] = ros.internal.ros2.messages.ros2.default_type('uint64',1,0);
[data.cap_flags, info.cap_flags] = ros.internal.ros2.messages.ros2.default_type('uint16',1,0);
[data.GIMBAL_DEVICE_CAP_FLAGS_HAS_RETRACT, info.GIMBAL_DEVICE_CAP_FLAGS_HAS_RETRACT] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 1, [NaN]);
[data.GIMBAL_DEVICE_CAP_FLAGS_HAS_NEUTRAL, info.GIMBAL_DEVICE_CAP_FLAGS_HAS_NEUTRAL] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 2, [NaN]);
[data.GIMBAL_DEVICE_CAP_FLAGS_HAS_ROLL_AXIS, info.GIMBAL_DEVICE_CAP_FLAGS_HAS_ROLL_AXIS] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 4, [NaN]);
[data.GIMBAL_DEVICE_CAP_FLAGS_HAS_ROLL_FOLLOW, info.GIMBAL_DEVICE_CAP_FLAGS_HAS_ROLL_FOLLOW] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 8, [NaN]);
[data.GIMBAL_DEVICE_CAP_FLAGS_HAS_ROLL_LOCK, info.GIMBAL_DEVICE_CAP_FLAGS_HAS_ROLL_LOCK] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 16, [NaN]);
[data.GIMBAL_DEVICE_CAP_FLAGS_HAS_PITCH_AXIS, info.GIMBAL_DEVICE_CAP_FLAGS_HAS_PITCH_AXIS] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 32, [NaN]);
[data.GIMBAL_DEVICE_CAP_FLAGS_HAS_PITCH_FOLLOW, info.GIMBAL_DEVICE_CAP_FLAGS_HAS_PITCH_FOLLOW] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 64, [NaN]);
[data.GIMBAL_DEVICE_CAP_FLAGS_HAS_PITCH_LOCK, info.GIMBAL_DEVICE_CAP_FLAGS_HAS_PITCH_LOCK] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 128, [NaN]);
[data.GIMBAL_DEVICE_CAP_FLAGS_HAS_YAW_AXIS, info.GIMBAL_DEVICE_CAP_FLAGS_HAS_YAW_AXIS] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 256, [NaN]);
[data.GIMBAL_DEVICE_CAP_FLAGS_HAS_YAW_FOLLOW, info.GIMBAL_DEVICE_CAP_FLAGS_HAS_YAW_FOLLOW] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 512, [NaN]);
[data.GIMBAL_DEVICE_CAP_FLAGS_HAS_YAW_LOCK, info.GIMBAL_DEVICE_CAP_FLAGS_HAS_YAW_LOCK] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 1024, [NaN]);
[data.GIMBAL_DEVICE_CAP_FLAGS_SUPPORTS_INFINITE_YAW, info.GIMBAL_DEVICE_CAP_FLAGS_SUPPORTS_INFINITE_YAW] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 2048, [NaN]);
[data.custom_cap_flags, info.custom_cap_flags] = ros.internal.ros2.messages.ros2.default_type('uint16',1,0);
[data.roll_min, info.roll_min] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.roll_max, info.roll_max] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.pitch_min, info.pitch_min] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.pitch_max, info.pitch_max] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.yaw_min, info.yaw_min] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.yaw_max, info.yaw_max] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.gimbal_device_id, info.gimbal_device_id] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0);
info.MessageType = 'px4_msgs/GimbalDeviceInformation';
info.constant = 0;
info.default = 0;
info.maxstrlen = NaN;
info.MaxLen = 1;
info.MinLen = 1;
info.MatPath = cell(1,28);
info.MatPath{1} = 'timestamp';
info.MatPath{2} = 'vendor_name';
info.MatPath{3} = 'model_name';
info.MatPath{4} = 'custom_name';
info.MatPath{5} = 'firmware_version';
info.MatPath{6} = 'hardware_version';
info.MatPath{7} = 'uid';
info.MatPath{8} = 'cap_flags';
info.MatPath{9} = 'GIMBAL_DEVICE_CAP_FLAGS_HAS_RETRACT';
info.MatPath{10} = 'GIMBAL_DEVICE_CAP_FLAGS_HAS_NEUTRAL';
info.MatPath{11} = 'GIMBAL_DEVICE_CAP_FLAGS_HAS_ROLL_AXIS';
info.MatPath{12} = 'GIMBAL_DEVICE_CAP_FLAGS_HAS_ROLL_FOLLOW';
info.MatPath{13} = 'GIMBAL_DEVICE_CAP_FLAGS_HAS_ROLL_LOCK';
info.MatPath{14} = 'GIMBAL_DEVICE_CAP_FLAGS_HAS_PITCH_AXIS';
info.MatPath{15} = 'GIMBAL_DEVICE_CAP_FLAGS_HAS_PITCH_FOLLOW';
info.MatPath{16} = 'GIMBAL_DEVICE_CAP_FLAGS_HAS_PITCH_LOCK';
info.MatPath{17} = 'GIMBAL_DEVICE_CAP_FLAGS_HAS_YAW_AXIS';
info.MatPath{18} = 'GIMBAL_DEVICE_CAP_FLAGS_HAS_YAW_FOLLOW';
info.MatPath{19} = 'GIMBAL_DEVICE_CAP_FLAGS_HAS_YAW_LOCK';
info.MatPath{20} = 'GIMBAL_DEVICE_CAP_FLAGS_SUPPORTS_INFINITE_YAW';
info.MatPath{21} = 'custom_cap_flags';
info.MatPath{22} = 'roll_min';
info.MatPath{23} = 'roll_max';
info.MatPath{24} = 'pitch_min';
info.MatPath{25} = 'pitch_max';
info.MatPath{26} = 'yaw_min';
info.MatPath{27} = 'yaw_max';
info.MatPath{28} = 'gimbal_device_id';
