function [data, info] = telemetryStatus
%TelemetryStatus gives an empty data for px4_msgs/TelemetryStatus
% Copyright 2019-2021 The MathWorks, Inc.
data = struct();
data.MessageType = 'px4_msgs/TelemetryStatus';
[data.LINK_TYPE_GENERIC, info.LINK_TYPE_GENERIC] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 0, [NaN]);
[data.LINK_TYPE_UBIQUITY_BULLET, info.LINK_TYPE_UBIQUITY_BULLET] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 1, [NaN]);
[data.LINK_TYPE_WIRE, info.LINK_TYPE_WIRE] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 2, [NaN]);
[data.LINK_TYPE_USB, info.LINK_TYPE_USB] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 3, [NaN]);
[data.LINK_TYPE_IRIDIUM, info.LINK_TYPE_IRIDIUM] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 4, [NaN]);
[data.timestamp, info.timestamp] = ros.internal.ros2.messages.ros2.default_type('uint64',1,0);
[data.type, info.type] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0);
[data.mode, info.mode] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0);
[data.flow_control, info.flow_control] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
[data.forwarding, info.forwarding] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
[data.mavlink_v2, info.mavlink_v2] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
[data.ftp, info.ftp] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
[data.streams, info.streams] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0);
[data.data_rate, info.data_rate] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.rate_multiplier, info.rate_multiplier] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.tx_rate_avg, info.tx_rate_avg] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.tx_error_rate_avg, info.tx_error_rate_avg] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.tx_message_count, info.tx_message_count] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0);
[data.tx_buffer_overruns, info.tx_buffer_overruns] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0);
[data.rx_rate_avg, info.rx_rate_avg] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.rx_message_count, info.rx_message_count] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0);
[data.rx_message_lost_count, info.rx_message_lost_count] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0);
[data.rx_buffer_overruns, info.rx_buffer_overruns] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0);
[data.rx_parse_errors, info.rx_parse_errors] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0);
[data.rx_packet_drop_count, info.rx_packet_drop_count] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0);
[data.rx_message_lost_rate, info.rx_message_lost_rate] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.HEARTBEAT_TIMEOUT_US, info.HEARTBEAT_TIMEOUT_US] = ros.internal.ros2.messages.ros2.default_type('uint64',1,0, 2500000, [NaN]);
[data.heartbeat_type_antenna_tracker, info.heartbeat_type_antenna_tracker] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
[data.heartbeat_type_gcs, info.heartbeat_type_gcs] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
[data.heartbeat_type_onboard_controller, info.heartbeat_type_onboard_controller] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
[data.heartbeat_type_gimbal, info.heartbeat_type_gimbal] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
[data.heartbeat_type_adsb, info.heartbeat_type_adsb] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
[data.heartbeat_type_camera, info.heartbeat_type_camera] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
[data.heartbeat_type_parachute, info.heartbeat_type_parachute] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
[data.heartbeat_type_open_drone_id, info.heartbeat_type_open_drone_id] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
[data.heartbeat_component_telemetry_radio, info.heartbeat_component_telemetry_radio] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
[data.heartbeat_component_log, info.heartbeat_component_log] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
[data.heartbeat_component_osd, info.heartbeat_component_osd] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
[data.heartbeat_component_obstacle_avoidance, info.heartbeat_component_obstacle_avoidance] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
[data.heartbeat_component_vio, info.heartbeat_component_vio] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
[data.heartbeat_component_pairing_manager, info.heartbeat_component_pairing_manager] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
[data.heartbeat_component_udp_bridge, info.heartbeat_component_udp_bridge] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
[data.heartbeat_component_uart_bridge, info.heartbeat_component_uart_bridge] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
[data.avoidance_system_healthy, info.avoidance_system_healthy] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
[data.open_drone_id_system_healthy, info.open_drone_id_system_healthy] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
[data.parachute_system_healthy, info.parachute_system_healthy] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
info.MessageType = 'px4_msgs/TelemetryStatus';
info.constant = 0;
info.default = 0;
info.maxstrlen = NaN;
info.MaxLen = 1;
info.MinLen = 1;
info.MatPath = cell(1,46);
info.MatPath{1} = 'LINK_TYPE_GENERIC';
info.MatPath{2} = 'LINK_TYPE_UBIQUITY_BULLET';
info.MatPath{3} = 'LINK_TYPE_WIRE';
info.MatPath{4} = 'LINK_TYPE_USB';
info.MatPath{5} = 'LINK_TYPE_IRIDIUM';
info.MatPath{6} = 'timestamp';
info.MatPath{7} = 'type';
info.MatPath{8} = 'mode';
info.MatPath{9} = 'flow_control';
info.MatPath{10} = 'forwarding';
info.MatPath{11} = 'mavlink_v2';
info.MatPath{12} = 'ftp';
info.MatPath{13} = 'streams';
info.MatPath{14} = 'data_rate';
info.MatPath{15} = 'rate_multiplier';
info.MatPath{16} = 'tx_rate_avg';
info.MatPath{17} = 'tx_error_rate_avg';
info.MatPath{18} = 'tx_message_count';
info.MatPath{19} = 'tx_buffer_overruns';
info.MatPath{20} = 'rx_rate_avg';
info.MatPath{21} = 'rx_message_count';
info.MatPath{22} = 'rx_message_lost_count';
info.MatPath{23} = 'rx_buffer_overruns';
info.MatPath{24} = 'rx_parse_errors';
info.MatPath{25} = 'rx_packet_drop_count';
info.MatPath{26} = 'rx_message_lost_rate';
info.MatPath{27} = 'HEARTBEAT_TIMEOUT_US';
info.MatPath{28} = 'heartbeat_type_antenna_tracker';
info.MatPath{29} = 'heartbeat_type_gcs';
info.MatPath{30} = 'heartbeat_type_onboard_controller';
info.MatPath{31} = 'heartbeat_type_gimbal';
info.MatPath{32} = 'heartbeat_type_adsb';
info.MatPath{33} = 'heartbeat_type_camera';
info.MatPath{34} = 'heartbeat_type_parachute';
info.MatPath{35} = 'heartbeat_type_open_drone_id';
info.MatPath{36} = 'heartbeat_component_telemetry_radio';
info.MatPath{37} = 'heartbeat_component_log';
info.MatPath{38} = 'heartbeat_component_osd';
info.MatPath{39} = 'heartbeat_component_obstacle_avoidance';
info.MatPath{40} = 'heartbeat_component_vio';
info.MatPath{41} = 'heartbeat_component_pairing_manager';
info.MatPath{42} = 'heartbeat_component_udp_bridge';
info.MatPath{43} = 'heartbeat_component_uart_bridge';
info.MatPath{44} = 'avoidance_system_healthy';
info.MatPath{45} = 'open_drone_id_system_healthy';
info.MatPath{46} = 'parachute_system_healthy';
