function [data, info] = positionSetpoint
%PositionSetpoint gives an empty data for px4_msgs/PositionSetpoint
% Copyright 2019-2021 The MathWorks, Inc.
data = struct();
data.MessageType = 'px4_msgs/PositionSetpoint';
[data.timestamp, info.timestamp] = ros.internal.ros2.messages.ros2.default_type('uint64',1,0);
[data.SETPOINT_TYPE_POSITION, info.SETPOINT_TYPE_POSITION] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 0, [NaN]);
[data.SETPOINT_TYPE_VELOCITY, info.SETPOINT_TYPE_VELOCITY] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 1, [NaN]);
[data.SETPOINT_TYPE_LOITER, info.SETPOINT_TYPE_LOITER] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 2, [NaN]);
[data.SETPOINT_TYPE_TAKEOFF, info.SETPOINT_TYPE_TAKEOFF] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 3, [NaN]);
[data.SETPOINT_TYPE_LAND, info.SETPOINT_TYPE_LAND] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 4, [NaN]);
[data.SETPOINT_TYPE_IDLE, info.SETPOINT_TYPE_IDLE] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 5, [NaN]);
[data.LOITER_TYPE_ORBIT, info.LOITER_TYPE_ORBIT] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 0, [NaN]);
[data.LOITER_TYPE_FIGUREEIGHT, info.LOITER_TYPE_FIGUREEIGHT] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 1, [NaN]);
[data.valid, info.valid] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
[data.type, info.type] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0);
[data.vx, info.vx] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.vy, info.vy] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.vz, info.vz] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.lat, info.lat] = ros.internal.ros2.messages.ros2.default_type('double',1,0);
[data.lon, info.lon] = ros.internal.ros2.messages.ros2.default_type('double',1,0);
[data.alt, info.alt] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.yaw, info.yaw] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.loiter_radius, info.loiter_radius] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.loiter_minor_radius, info.loiter_minor_radius] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.loiter_direction_counter_clockwise, info.loiter_direction_counter_clockwise] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
[data.loiter_orientation, info.loiter_orientation] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.loiter_pattern, info.loiter_pattern] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0);
[data.acceptance_radius, info.acceptance_radius] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.alt_acceptance_radius, info.alt_acceptance_radius] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.cruising_speed, info.cruising_speed] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.gliding_enabled, info.gliding_enabled] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
[data.cruising_throttle, info.cruising_throttle] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
info.MessageType = 'px4_msgs/PositionSetpoint';
info.constant = 0;
info.default = 0;
info.maxstrlen = NaN;
info.MaxLen = 1;
info.MinLen = 1;
info.MatPath = cell(1,28);
info.MatPath{1} = 'timestamp';
info.MatPath{2} = 'SETPOINT_TYPE_POSITION';
info.MatPath{3} = 'SETPOINT_TYPE_VELOCITY';
info.MatPath{4} = 'SETPOINT_TYPE_LOITER';
info.MatPath{5} = 'SETPOINT_TYPE_TAKEOFF';
info.MatPath{6} = 'SETPOINT_TYPE_LAND';
info.MatPath{7} = 'SETPOINT_TYPE_IDLE';
info.MatPath{8} = 'LOITER_TYPE_ORBIT';
info.MatPath{9} = 'LOITER_TYPE_FIGUREEIGHT';
info.MatPath{10} = 'valid';
info.MatPath{11} = 'type';
info.MatPath{12} = 'vx';
info.MatPath{13} = 'vy';
info.MatPath{14} = 'vz';
info.MatPath{15} = 'lat';
info.MatPath{16} = 'lon';
info.MatPath{17} = 'alt';
info.MatPath{18} = 'yaw';
info.MatPath{19} = 'loiter_radius';
info.MatPath{20} = 'loiter_minor_radius';
info.MatPath{21} = 'loiter_direction_counter_clockwise';
info.MatPath{22} = 'loiter_orientation';
info.MatPath{23} = 'loiter_pattern';
info.MatPath{24} = 'acceptance_radius';
info.MatPath{25} = 'alt_acceptance_radius';
info.MatPath{26} = 'cruising_speed';
info.MatPath{27} = 'gliding_enabled';
info.MatPath{28} = 'cruising_throttle';
