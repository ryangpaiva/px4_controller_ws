function [data, info] = tuneControl
%TuneControl gives an empty data for px4_msgs/TuneControl
% Copyright 2019-2021 The MathWorks, Inc.
data = struct();
data.MessageType = 'px4_msgs/TuneControl';
[data.timestamp, info.timestamp] = ros.internal.ros2.messages.ros2.default_type('uint64',1,0);
[data.TUNE_ID_STOP, info.TUNE_ID_STOP] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 0, [NaN]);
[data.TUNE_ID_STARTUP, info.TUNE_ID_STARTUP] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 1, [NaN]);
[data.TUNE_ID_ERROR, info.TUNE_ID_ERROR] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 2, [NaN]);
[data.TUNE_ID_NOTIFY_POSITIVE, info.TUNE_ID_NOTIFY_POSITIVE] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 3, [NaN]);
[data.TUNE_ID_NOTIFY_NEUTRAL, info.TUNE_ID_NOTIFY_NEUTRAL] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 4, [NaN]);
[data.TUNE_ID_NOTIFY_NEGATIVE, info.TUNE_ID_NOTIFY_NEGATIVE] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 5, [NaN]);
[data.TUNE_ID_ARMING_WARNING, info.TUNE_ID_ARMING_WARNING] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 6, [NaN]);
[data.TUNE_ID_BATTERY_WARNING_SLOW, info.TUNE_ID_BATTERY_WARNING_SLOW] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 7, [NaN]);
[data.TUNE_ID_BATTERY_WARNING_FAST, info.TUNE_ID_BATTERY_WARNING_FAST] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 8, [NaN]);
[data.TUNE_ID_GPS_WARNING, info.TUNE_ID_GPS_WARNING] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 9, [NaN]);
[data.TUNE_ID_ARMING_FAILURE, info.TUNE_ID_ARMING_FAILURE] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 10, [NaN]);
[data.TUNE_ID_PARACHUTE_RELEASE, info.TUNE_ID_PARACHUTE_RELEASE] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 11, [NaN]);
[data.TUNE_ID_SINGLE_BEEP, info.TUNE_ID_SINGLE_BEEP] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 12, [NaN]);
[data.TUNE_ID_HOME_SET, info.TUNE_ID_HOME_SET] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 13, [NaN]);
[data.TUNE_ID_SD_INIT, info.TUNE_ID_SD_INIT] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 14, [NaN]);
[data.TUNE_ID_SD_ERROR, info.TUNE_ID_SD_ERROR] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 15, [NaN]);
[data.TUNE_ID_PROG_PX4IO, info.TUNE_ID_PROG_PX4IO] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 16, [NaN]);
[data.TUNE_ID_PROG_PX4IO_OK, info.TUNE_ID_PROG_PX4IO_OK] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 17, [NaN]);
[data.TUNE_ID_PROG_PX4IO_ERR, info.TUNE_ID_PROG_PX4IO_ERR] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 18, [NaN]);
[data.TUNE_ID_POWER_OFF, info.TUNE_ID_POWER_OFF] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 19, [NaN]);
[data.NUMBER_OF_TUNES, info.NUMBER_OF_TUNES] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 20, [NaN]);
[data.tune_id, info.tune_id] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0);
[data.tune_override, info.tune_override] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
[data.frequency, info.frequency] = ros.internal.ros2.messages.ros2.default_type('uint16',1,0);
[data.duration, info.duration] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0);
[data.silence, info.silence] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0);
[data.volume, info.volume] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0);
[data.VOLUME_LEVEL_MIN, info.VOLUME_LEVEL_MIN] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 0, [NaN]);
[data.VOLUME_LEVEL_DEFAULT, info.VOLUME_LEVEL_DEFAULT] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 20, [NaN]);
[data.VOLUME_LEVEL_MAX, info.VOLUME_LEVEL_MAX] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 100, [NaN]);
[data.ORB_QUEUE_LENGTH, info.ORB_QUEUE_LENGTH] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 4, [NaN]);
info.MessageType = 'px4_msgs/TuneControl';
info.constant = 0;
info.default = 0;
info.maxstrlen = NaN;
info.MaxLen = 1;
info.MinLen = 1;
info.MatPath = cell(1,32);
info.MatPath{1} = 'timestamp';
info.MatPath{2} = 'TUNE_ID_STOP';
info.MatPath{3} = 'TUNE_ID_STARTUP';
info.MatPath{4} = 'TUNE_ID_ERROR';
info.MatPath{5} = 'TUNE_ID_NOTIFY_POSITIVE';
info.MatPath{6} = 'TUNE_ID_NOTIFY_NEUTRAL';
info.MatPath{7} = 'TUNE_ID_NOTIFY_NEGATIVE';
info.MatPath{8} = 'TUNE_ID_ARMING_WARNING';
info.MatPath{9} = 'TUNE_ID_BATTERY_WARNING_SLOW';
info.MatPath{10} = 'TUNE_ID_BATTERY_WARNING_FAST';
info.MatPath{11} = 'TUNE_ID_GPS_WARNING';
info.MatPath{12} = 'TUNE_ID_ARMING_FAILURE';
info.MatPath{13} = 'TUNE_ID_PARACHUTE_RELEASE';
info.MatPath{14} = 'TUNE_ID_SINGLE_BEEP';
info.MatPath{15} = 'TUNE_ID_HOME_SET';
info.MatPath{16} = 'TUNE_ID_SD_INIT';
info.MatPath{17} = 'TUNE_ID_SD_ERROR';
info.MatPath{18} = 'TUNE_ID_PROG_PX4IO';
info.MatPath{19} = 'TUNE_ID_PROG_PX4IO_OK';
info.MatPath{20} = 'TUNE_ID_PROG_PX4IO_ERR';
info.MatPath{21} = 'TUNE_ID_POWER_OFF';
info.MatPath{22} = 'NUMBER_OF_TUNES';
info.MatPath{23} = 'tune_id';
info.MatPath{24} = 'tune_override';
info.MatPath{25} = 'frequency';
info.MatPath{26} = 'duration';
info.MatPath{27} = 'silence';
info.MatPath{28} = 'volume';
info.MatPath{29} = 'VOLUME_LEVEL_MIN';
info.MatPath{30} = 'VOLUME_LEVEL_DEFAULT';
info.MatPath{31} = 'VOLUME_LEVEL_MAX';
info.MatPath{32} = 'ORB_QUEUE_LENGTH';
