function [data, info] = internalCombustionEngineStatus
%InternalCombustionEngineStatus gives an empty data for px4_msgs/InternalCombustionEngineStatus
% Copyright 2019-2021 The MathWorks, Inc.
data = struct();
data.MessageType = 'px4_msgs/InternalCombustionEngineStatus';
[data.timestamp, info.timestamp] = ros.internal.ros2.messages.ros2.default_type('uint64',1,0);
[data.STATE_STOPPED, info.STATE_STOPPED] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 0, [NaN]);
[data.STATE_STARTING, info.STATE_STARTING] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 1, [NaN]);
[data.STATE_RUNNING, info.STATE_RUNNING] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 2, [NaN]);
[data.STATE_FAULT, info.STATE_FAULT] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 3, [NaN]);
[data.state, info.state] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0);
[data.FLAG_GENERAL_ERROR, info.FLAG_GENERAL_ERROR] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 1, [NaN]);
[data.FLAG_CRANKSHAFT_SENSOR_ERROR_SUPPORTED, info.FLAG_CRANKSHAFT_SENSOR_ERROR_SUPPORTED] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 2, [NaN]);
[data.FLAG_CRANKSHAFT_SENSOR_ERROR, info.FLAG_CRANKSHAFT_SENSOR_ERROR] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 4, [NaN]);
[data.FLAG_TEMPERATURE_SUPPORTED, info.FLAG_TEMPERATURE_SUPPORTED] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 8, [NaN]);
[data.FLAG_TEMPERATURE_BELOW_NOMINAL, info.FLAG_TEMPERATURE_BELOW_NOMINAL] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 16, [NaN]);
[data.FLAG_TEMPERATURE_ABOVE_NOMINAL, info.FLAG_TEMPERATURE_ABOVE_NOMINAL] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 32, [NaN]);
[data.FLAG_TEMPERATURE_OVERHEATING, info.FLAG_TEMPERATURE_OVERHEATING] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 64, [NaN]);
[data.FLAG_TEMPERATURE_EGT_ABOVE_NOMINAL, info.FLAG_TEMPERATURE_EGT_ABOVE_NOMINAL] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 128, [NaN]);
[data.FLAG_FUEL_PRESSURE_SUPPORTED, info.FLAG_FUEL_PRESSURE_SUPPORTED] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 256, [NaN]);
[data.FLAG_FUEL_PRESSURE_BELOW_NOMINAL, info.FLAG_FUEL_PRESSURE_BELOW_NOMINAL] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 512, [NaN]);
[data.FLAG_FUEL_PRESSURE_ABOVE_NOMINAL, info.FLAG_FUEL_PRESSURE_ABOVE_NOMINAL] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 1024, [NaN]);
[data.FLAG_DETONATION_SUPPORTED, info.FLAG_DETONATION_SUPPORTED] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 2048, [NaN]);
[data.FLAG_DETONATION_OBSERVED, info.FLAG_DETONATION_OBSERVED] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 4096, [NaN]);
[data.FLAG_MISFIRE_SUPPORTED, info.FLAG_MISFIRE_SUPPORTED] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 8192, [NaN]);
[data.FLAG_MISFIRE_OBSERVED, info.FLAG_MISFIRE_OBSERVED] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 16384, [NaN]);
[data.FLAG_OIL_PRESSURE_SUPPORTED, info.FLAG_OIL_PRESSURE_SUPPORTED] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 32768, [NaN]);
[data.FLAG_OIL_PRESSURE_BELOW_NOMINAL, info.FLAG_OIL_PRESSURE_BELOW_NOMINAL] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 65536, [NaN]);
[data.FLAG_OIL_PRESSURE_ABOVE_NOMINAL, info.FLAG_OIL_PRESSURE_ABOVE_NOMINAL] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 131072, [NaN]);
[data.FLAG_DEBRIS_SUPPORTED, info.FLAG_DEBRIS_SUPPORTED] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 262144, [NaN]);
[data.FLAG_DEBRIS_DETECTED, info.FLAG_DEBRIS_DETECTED] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0, 524288, [NaN]);
[data.flags, info.flags] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0);
[data.engine_load_percent, info.engine_load_percent] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0);
[data.engine_speed_rpm, info.engine_speed_rpm] = ros.internal.ros2.messages.ros2.default_type('uint32',1,0);
[data.spark_dwell_time_ms, info.spark_dwell_time_ms] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.atmospheric_pressure_kpa, info.atmospheric_pressure_kpa] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.intake_manifold_pressure_kpa, info.intake_manifold_pressure_kpa] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.intake_manifold_temperature, info.intake_manifold_temperature] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.coolant_temperature, info.coolant_temperature] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.oil_pressure, info.oil_pressure] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.oil_temperature, info.oil_temperature] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.fuel_pressure, info.fuel_pressure] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.fuel_consumption_rate_cm3pm, info.fuel_consumption_rate_cm3pm] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.estimated_consumed_fuel_volume_cm3, info.estimated_consumed_fuel_volume_cm3] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.throttle_position_percent, info.throttle_position_percent] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0);
[data.ecu_index, info.ecu_index] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0);
[data.SPARK_PLUG_SINGLE, info.SPARK_PLUG_SINGLE] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 0, [NaN]);
[data.SPARK_PLUG_FIRST_ACTIVE, info.SPARK_PLUG_FIRST_ACTIVE] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 1, [NaN]);
[data.SPARK_PLUG_SECOND_ACTIVE, info.SPARK_PLUG_SECOND_ACTIVE] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 2, [NaN]);
[data.SPARK_PLUG_BOTH_ACTIVE, info.SPARK_PLUG_BOTH_ACTIVE] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 3, [NaN]);
[data.spark_plug_usage, info.spark_plug_usage] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0);
[data.ignition_timing_deg, info.ignition_timing_deg] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.injection_time_ms, info.injection_time_ms] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.cylinder_head_temperature, info.cylinder_head_temperature] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.exhaust_gas_temperature, info.exhaust_gas_temperature] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.lambda_coefficient, info.lambda_coefficient] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
info.MessageType = 'px4_msgs/InternalCombustionEngineStatus';
info.constant = 0;
info.default = 0;
info.maxstrlen = NaN;
info.MaxLen = 1;
info.MinLen = 1;
info.MatPath = cell(1,51);
info.MatPath{1} = 'timestamp';
info.MatPath{2} = 'STATE_STOPPED';
info.MatPath{3} = 'STATE_STARTING';
info.MatPath{4} = 'STATE_RUNNING';
info.MatPath{5} = 'STATE_FAULT';
info.MatPath{6} = 'state';
info.MatPath{7} = 'FLAG_GENERAL_ERROR';
info.MatPath{8} = 'FLAG_CRANKSHAFT_SENSOR_ERROR_SUPPORTED';
info.MatPath{9} = 'FLAG_CRANKSHAFT_SENSOR_ERROR';
info.MatPath{10} = 'FLAG_TEMPERATURE_SUPPORTED';
info.MatPath{11} = 'FLAG_TEMPERATURE_BELOW_NOMINAL';
info.MatPath{12} = 'FLAG_TEMPERATURE_ABOVE_NOMINAL';
info.MatPath{13} = 'FLAG_TEMPERATURE_OVERHEATING';
info.MatPath{14} = 'FLAG_TEMPERATURE_EGT_ABOVE_NOMINAL';
info.MatPath{15} = 'FLAG_FUEL_PRESSURE_SUPPORTED';
info.MatPath{16} = 'FLAG_FUEL_PRESSURE_BELOW_NOMINAL';
info.MatPath{17} = 'FLAG_FUEL_PRESSURE_ABOVE_NOMINAL';
info.MatPath{18} = 'FLAG_DETONATION_SUPPORTED';
info.MatPath{19} = 'FLAG_DETONATION_OBSERVED';
info.MatPath{20} = 'FLAG_MISFIRE_SUPPORTED';
info.MatPath{21} = 'FLAG_MISFIRE_OBSERVED';
info.MatPath{22} = 'FLAG_OIL_PRESSURE_SUPPORTED';
info.MatPath{23} = 'FLAG_OIL_PRESSURE_BELOW_NOMINAL';
info.MatPath{24} = 'FLAG_OIL_PRESSURE_ABOVE_NOMINAL';
info.MatPath{25} = 'FLAG_DEBRIS_SUPPORTED';
info.MatPath{26} = 'FLAG_DEBRIS_DETECTED';
info.MatPath{27} = 'flags';
info.MatPath{28} = 'engine_load_percent';
info.MatPath{29} = 'engine_speed_rpm';
info.MatPath{30} = 'spark_dwell_time_ms';
info.MatPath{31} = 'atmospheric_pressure_kpa';
info.MatPath{32} = 'intake_manifold_pressure_kpa';
info.MatPath{33} = 'intake_manifold_temperature';
info.MatPath{34} = 'coolant_temperature';
info.MatPath{35} = 'oil_pressure';
info.MatPath{36} = 'oil_temperature';
info.MatPath{37} = 'fuel_pressure';
info.MatPath{38} = 'fuel_consumption_rate_cm3pm';
info.MatPath{39} = 'estimated_consumed_fuel_volume_cm3';
info.MatPath{40} = 'throttle_position_percent';
info.MatPath{41} = 'ecu_index';
info.MatPath{42} = 'SPARK_PLUG_SINGLE';
info.MatPath{43} = 'SPARK_PLUG_FIRST_ACTIVE';
info.MatPath{44} = 'SPARK_PLUG_SECOND_ACTIVE';
info.MatPath{45} = 'SPARK_PLUG_BOTH_ACTIVE';
info.MatPath{46} = 'spark_plug_usage';
info.MatPath{47} = 'ignition_timing_deg';
info.MatPath{48} = 'injection_time_ms';
info.MatPath{49} = 'cylinder_head_temperature';
info.MatPath{50} = 'exhaust_gas_temperature';
info.MatPath{51} = 'lambda_coefficient';
